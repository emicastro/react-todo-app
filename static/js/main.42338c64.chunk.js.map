{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","key","onClick","TodoList","setTodos","test","newTodos","updatedTodo","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPA0DeA,MAxDf,SAAkBC,GAAQ,IAAD,EACGC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAD5C,mBAChBC,EADgB,KACTC,EADS,KAGjBC,EAAWC,iBAAO,MAExBC,qBAAU,WACRF,EAASG,QAAQC,WAGnB,IAAMC,EAAe,SAAAC,GACnBP,EAASO,EAAEC,OAAOV,QAapB,OACE,0BAAMW,UAAU,YAAYC,SAXT,SAAAH,GACnBA,EAAEI,iBAEFhB,EAAMe,SAAS,CACbE,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMjB,IAERC,EAAS,MAKNL,EAAME,KACL,oCACE,2BACEoB,KAAK,OACLC,YAAY,cACZpB,MAAOC,EACPoB,KAAK,OACLV,UAAU,kBACVW,SAAUd,EACVe,IAAKpB,IAEP,4BAAQQ,UAAU,oBAAlB,WAGF,oCACE,2BACEQ,KAAK,OACLC,YAAY,aACZpB,MAAOC,EACPoB,KAAK,OACLV,UAAU,aACVW,SAAUd,EACVe,IAAKpB,IAEP,4BAAQQ,UAAU,eAAlB,e,cCNKa,MAxCf,YAAgE,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAAc,EACrC9B,mBAAS,CAC/BgB,GAAI,KACJd,MAAO,KAHoD,mBACtDD,EADsD,KAChD8B,EADgD,KAc7D,OAAI9B,EAAKe,GACA,kBAAC,EAAD,CAAUf,KAAMA,EAAMa,SATV,SAAAZ,GACnB4B,EAAW7B,EAAKe,GAAId,GACpB6B,EAAQ,CACNf,GAAI,KACJd,MAAO,QAQJyB,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACf,yBACErB,UAAWoB,EAAKE,WAAa,oBAAsB,WACnDC,IAAKF,GAEL,yBAAKE,IAAKH,EAAKjB,GAAIqB,QAAS,kBAAMT,EAAaK,EAAKjB,MACjDiB,EAAKb,MAER,yBAAKP,UAAU,SACb,kBAAC,IAAD,CACEwB,QAAS,kBAAMR,EAAWI,EAAKjB,KAC/BH,UAAU,gBAEZ,kBAAC,IAAD,CACEwB,QAAS,kBAAMN,EAAQ,CAAEf,GAAIiB,EAAKjB,GAAId,MAAO+B,EAAKb,QAClDP,UAAU,oBCcLyB,MAhDf,WAAqB,IAAD,EACQtC,mBAAS,IADjB,mBACX2B,EADW,KACJY,EADI,KAkClB,OACE,6BACE,0DACA,kBAAC,EAAD,CAAUzB,SAlCE,SAAAmB,GACd,GAAKA,EAAKb,OAAQ,QAAQoB,KAAKP,EAAKb,MAApC,CAGA,IAAMqB,EAAQ,CAAIR,GAAJ,mBAAaN,IAC3BY,EAASE,OA8BP,kBAAC,EAAD,CACEd,MAAOA,EACPC,aAhBe,SAAAZ,GACnB,IAAI0B,EAAcf,EAAMK,KAAI,SAAAC,GAI1B,OAHIA,EAAKjB,KAAOA,IACdiB,EAAKE,YAAcF,EAAKE,YAEnBF,KAETM,EAASG,IAULb,WAtBa,SAAAb,GACjB,IAAM2B,EAAY,YAAIhB,GAAOiB,QAAO,SAAAX,GAAI,OAAIA,EAAKjB,KAAOA,KACxDuB,EAASI,IAqBLb,WA/Ba,SAACe,EAAQC,GACrBA,EAAS1B,OAAQ,QAAQoB,KAAKM,EAAS1B,OAI5CmB,GAAS,SAAAQ,GAAI,OAAIA,EAAKf,KAAI,SAAAgB,GAAI,OAAKA,EAAKhC,KAAO6B,EAASC,EAAWE,aCRxDC,MARf,WACE,OACE,yBAAKpC,UAAU,YACb,kBAAC,EAAD,QCHNqC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.42338c64.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\n\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : '')\n\n  const inputRef = useRef(null)\n\n  useEffect(() => {\n    inputRef.current.focus()\n  })\n\n  const handleChange = e => {\n    setInput(e.target.value)\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    })\n    setInput('')\n  }\n\n  return (\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\n      {props.edit ? (\n        <>\n          <input\n            type=\"text\"\n            placeholder=\"Edit a todo\"\n            value={input}\n            name=\"text\"\n            className=\"todo-input edit\"\n            onChange={handleChange}\n            ref={inputRef}\n          />\n          <button className=\"todo-button edit\">Update</button>\n        </>\n      ) : (\n        <>\n          <input\n            type=\"text\"\n            placeholder=\"Add a todo\"\n            value={input}\n            name=\"text\"\n            className=\"todo-input\"\n            onChange={handleChange}\n            ref={inputRef}\n          />\n          <button className=\"todo-button\">Add todo</button>\n        </>\n      )}\n    </form>\n  )\n}\n\nexport default TodoForm\n","import React, { useState } from 'react'\nimport TodoForm from './TodoForm'\nimport { RiCloseCircleLine } from 'react-icons/ri'\nimport { TiEdit } from 'react-icons/ti'\n\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  })\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value)\n    setEdit({\n      id: null,\n      value: ''\n    })\n  }\n\n  if (edit.id) {\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />\n  }\n\n  return todos.map((todo, index) => (\n    <div\n      className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\n      key={index}\n    >\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n        {todo.text}\n      </div>\n      <div className=\"icons\">\n        <RiCloseCircleLine\n          onClick={() => removeTodo(todo.id)}\n          className=\"delete-icon\"\n        />\n        <TiEdit\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\n          className=\"edit-icon\"\n        />\n      </div>\n    </div>\n  ))\n}\n\nexport default Todo\n","import React, { useState } from 'react'\nimport Todo from './Todo'\nimport TodoForm from './TodoForm'\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([])\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return\n    }\n    const newTodos = [todo, ...todos]\n    setTodos(newTodos)\n  }\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return\n    }\n\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)))\n  }\n\n  const removeTodo = id => {\n    const removeArr = [...todos].filter(todo => todo.id !== id)\n    setTodos(removeArr)\n  }\n\n  const completeTodo = id => {\n    let updatedTodo = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete\n      }\n      return todo\n    })\n    setTodos(updatedTodo)\n  }\n\n  return (\n    <div>\n      <h1>What's the Plan for Today?</h1>\n      <TodoForm onSubmit={addTodo} />\n      <Todo\n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n        updateTodo={updateTodo}\n      />\n    </div>\n  )\n}\n\nexport default TodoList\n","import React from 'react'\nimport './App.css'\nimport TodoList from './components/TodoList'\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}